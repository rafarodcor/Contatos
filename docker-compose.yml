# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP.NET Core service.

version: '3.8'

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

services:
  contatosapi:
    image: contatosapi
    depends_on:
      - otel-collector
      - rabbitmq_
    build:
      context: .
      dockerfile: ./Contatos.API/Dockerfile
    ports:
      - 8080:8080
    environment:
      Otel__Endpoint: http://otel-collector:4317
    networks:
      - monitoring
  contatosconsumerinc:
    image: contatosconsumerinc
    depends_on:
      - otel-collector
      - rabbitmq_
    build:
      context: .
      dockerfile: ./Contatos.Consumer.Include/Dockerfile
    ports:
      - 8082:8082
    environment:
      Otel__Endpoint: http://otel-collector:4317      
    networks:
      - monitoring
  contatosconsumeralt:
    image: contatosconsumeralt
    depends_on:
      - otel-collector
      - rabbitmq_
    build:
      context: .
      dockerfile: ./Contatos.Consumer.Alter/Dockerfile
    ports:
      - 8083:8083
    environment:
      Otel__Endpoint: http://otel-collector:4317      
    networks:
      - monitoring
  contatosconsumerdel:
    image: contatosconsumerdel
    depends_on:
      - otel-collector
      - rabbitmq_
    build:
      context: .
      dockerfile: ./Contatos.Consumer.Delete/Dockerfile
    ports:
      - 8084:8084
    environment:
      Otel__Endpoint: http://otel-collector:4317      
    networks:
      - monitoring
  otel-collector:
    image: otel/opentelemetry-collector:0.95.0
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./config/otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "8888:8888" 
      - "8889:8889" 
      - "13133:13133"
      - "4317:4317"
    networks:
      - monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    restart: unless-stopped
    networks:
      - monitoring
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - '3000:3000'
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - monitoring
  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.5.0
    container_name: node_exporter
    command: '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - monitoring
  rabbitmq_:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq_
    restart: always
    expose:
      - 15672
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - monitoring